const api_url = "http://localhost:8006/stats/users";

// Define the session cookies as an object

// console.log(`session_id=${session_cookies}`);
// console.log(`session_id=${session_cookies}`);
// console.log(`session_id=${session_cookies}`);
console.log(`session_id=${session_cookies}`);
console.log("Kronborg er cool");
// Create a Headers object and add the cookies to it
// const headers = new Headers();
// for (const cookieName in session_cookies) {
//   headers.append("Cookie", `${cookieName}=${session_cookies[cookieName]}`);
// }
// const sessionIDD = "55cc9563-374c-4b46-8c9c-c026cd0e4472";
console.log(session_cookies);
console.log("sdfsdf");
fetch(api_url, {
  method: "GET",
  headers: {
    // Authorization: `${session_cookies}`,
    Kronborg: "Kronbrog",
    sessin_id: `${session_cookies}`, // Include the session ID in the headers
    // Cookie: `session_id=${sessionIDD}`,
  },
})
  .then((response) => {
    if (response.ok) {
      return response.json();
    } else {
      throw new Error("Network response was not ok");
    }
  })
  .then((data) => {
    // Handle the response data here
    console.log(data);
  })
  .catch((error) => {
    // Handle errors here
    console.error("There was a problem with the fetch operation:", error);
  });

// function fetchDataWithSessionID(apiURL, sessionID) {
//   fetch(apiURL, {
//     method: "GET",
//     headers: {
//       Cookie: `session_id=${sessionID}`,
//     },
//   })
//     .then((response) => {
//       if (response.ok) {
//         return response.json();
//       } else {
//         throw new Error("Network response was not ok");
//       }
//     })
//     .then((data) => {
//       // Handle the response data here
//       console.log(data);
//     })
//     .catch((error) => {
//       // Handle errors here
//       console.error("There was a problem with the fetch operation:", error);
//     });
// }

// // Usage
// const apiURL = "https://api.seaofkeys.com/stats/users";
// // const sessionID = session_cookies.session_id;

// fetchDataWithSessionID(apiURL, sessionID);
